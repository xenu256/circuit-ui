(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{"./docs/content/getting-started/developers.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),o=a.n(t),m=a("./node_modules/@mdx-js/tag/dist/index.js");n.default=function(e){var n=e.components;!function(e,n){var a={};for(var t in e)n.indexOf(t)>=0||Object.prototype.hasOwnProperty.call(e,t)&&(a[t]=e[t])}(e,["components"]);return o.a.createElement(m.MDXTag,{name:"wrapper",components:n},o.a.createElement(m.MDXTag,{name:"h1",components:n,props:{id:"developers"}},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h1",props:{"aria-hidden":!0,href:"#developers"}},o.a.createElement(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Developers"),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"install"}},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#install"}},o.a.createElement(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Install"),o.a.createElement(m.MDXTag,{name:"p",components:n},"You can install Circuit via npm or yarn. Today we do not have a functioning\nbuild for distribution, so you should install the latest release\nfrom github by tag."),o.a.createElement(m.MDXTag,{name:"p",components:n},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/sumup/circuit-ui/releases"}},"See all releases on Github")),o.a.createElement(m.MDXTag,{name:"p",components:n},"Circuit also uses ",o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/emotion-js/emotion"}},"emotion")," and ",o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/emotion-js/emotion-theming"}},"emotion-theming"),"."),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash"}},"npm install git+https://github.com/sumup/circuit-ui.git#development-0.0.4 emotion react-emotion emotion-theming\n")),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash"}},"yarn add git+https://github.com/sumup/circuit-ui.git#development-0.0.4 emotion react-emotion emotion-theming\n")),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"configuring-the-theme"}},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#configuring-the-theme"}},o.a.createElement(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Configuring the theme"),o.a.createElement(m.MDXTag,{name:"p",components:n},"At the root of your application, you should tell your app which theme to use.\nIn most cases, you will want to use the SumUp default theme."),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"import { ThemeProvider } from 'emotion-theming';\nimport { Button, theme } from '@sumup/circuit-ui';\n\nconst App = () => (\n  <ThemeProvider theme={theme.standard}>\n    <Button primary>Click me</Button>\n  </ThemeProvider>\n);\n\nexport default App;\n")),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"using-components"}},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#using-components"}},o.a.createElement(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Using components"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Simply import components by name from the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"@sumup/circuit-ui")," package, as demonstrated\nabove."),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"using-helpers"}},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#using-helpers"}},o.a.createElement(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Using helpers"),o.a.createElement(m.MDXTag,{name:"p",components:n},"There are a few helpers you may want to use within Circuit."),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"injecting-global-styles"}},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#injecting-global-styles"}},o.a.createElement(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Injecting global styles"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Sometimes you may need to apply global styles to your page. Here is how you can do this with the utilities provided by Circuit UI."),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"import { theme, injectGlobalStyles } from '@sumup/circuit-ui';\n\nconst customStyles = `\n  body {\n    color: red;\n  }\n`;\n\ninjectGlobalStyles({ theme: theme.standard, custom: customStyles });\n")),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"contributing"}},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#contributing"}},o.a.createElement(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Contributing"),o.a.createElement(m.MDXTag,{name:"p",components:n},"You can open a pull request on Github."),o.a.createElement(m.MDXTag,{name:"h1",components:n,props:{id:"developers-1"}},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h1",props:{"aria-hidden":!0,href:"#developers-1"}},o.a.createElement(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Developers"))}}}]);