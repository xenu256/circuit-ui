(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{"./docs/content/styles/fonts.mdx":function(e,a,n){"use strict";n.r(a);var t=n("./node_modules/react/index.js"),o=n.n(t),s=n("./node_modules/@mdx-js/tag/dist/index.js");a.default=function(e){var a=e.components;!function(e,a){var n={};for(var t in e)a.indexOf(t)>=0||Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])}(e,["components"]);return o.a.createElement(s.MDXTag,{name:"wrapper",components:a},o.a.createElement(s.MDXTag,{name:"h1",components:a,props:{id:"fonts"}},o.a.createElement(s.MDXTag,{name:"a",components:a,parentName:"h1",props:{"aria-hidden":!0,href:"#fonts"}},o.a.createElement(s.MDXTag,{name:"span",components:a,parentName:"a",props:{className:"icon-link"}},"#")),"Fonts"),o.a.createElement(s.MDXTag,{name:"h2",components:a,props:{id:"defining-the-font-stack"}},o.a.createElement(s.MDXTag,{name:"a",components:a,parentName:"h2",props:{"aria-hidden":!0,href:"#defining-the-font-stack"}},o.a.createElement(s.MDXTag,{name:"span",components:a,parentName:"a",props:{className:"icon-link"}},"#")),"Defining the font stack"),o.a.createElement(s.MDXTag,{name:"p",components:a},"The font stack can be configured as part of the theme. The default font stack is applied to the ",o.a.createElement(s.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"body")," and the mono font stack is applied to ",o.a.createElement(s.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"pre")," and ",o.a.createElement(s.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"code")," tags. The default values are:"),o.a.createElement(s.MDXTag,{name:"pre",components:a},o.a.createElement(s.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-js"}},"export const fontStack = {\n  default: 'aktiv-grotesk, -apple-system, BlinkMacSystemFont, \"Segoe UI\"',\n  mono: 'Consolas, monaco, monospace'\n};\n")),o.a.createElement(s.MDXTag,{name:"h2",components:a,props:{id:"loading-custom-web-fonts"}},o.a.createElement(s.MDXTag,{name:"a",components:a,parentName:"h2",props:{"aria-hidden":!0,href:"#loading-custom-web-fonts"}},o.a.createElement(s.MDXTag,{name:"span",components:a,parentName:"a",props:{className:"icon-link"}},"#")),"Loading custom web fonts"),o.a.createElement(s.MDXTag,{name:"p",components:a},"There are myriads of ways to load fonts on the web. You can choose between ",o.a.createElement(s.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://css-tricks.com/fout-foit-foft/"}},"FOIT"),", ",o.a.createElement(s.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://www.zachleat.com/web/comprehensive-webfonts/#fout-class"}},"FOUT")," and ",o.a.createElement(s.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://www.zachleat.com/web/comprehensive-webfonts/#foft"}},"FOFT"),", each with several implementation techniques."),o.a.createElement(s.MDXTag,{name:"p",components:a},"Circuit UI does not enforce any approach. It is up to you to choose and implement your preferred one. Have a look at Zach Leatherman's ",o.a.createElement(s.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://www.zachleat.com/web/comprehensive-webfonts/"}},"Comprehensive Guide to Font Loading Strategies")," for inspiration."),o.a.createElement(s.MDXTag,{name:"p",components:a},"The simplest strategy is the ",o.a.createElement(s.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://www.zachleat.com/web/comprehensive-webfonts/#font-face"}},"unceremonious font-face")," with ",o.a.createElement(s.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"preload")," and ",o.a.createElement(s.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"font-display"),". This is the default approach recommended by ",o.a.createElement(s.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://fonts.google.com/"}},"Google Fonts"),". Here's how you can implement it with Circuit UI:"),o.a.createElement(s.MDXTag,{name:"ol",components:a},o.a.createElement(s.MDXTag,{name:"li",components:a,parentName:"ol"},"Add the font-face(s) that you'd like to use to you global HTML ",o.a.createElement(s.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"<head>"),":")),o.a.createElement(s.MDXTag,{name:"pre",components:a},o.a.createElement(s.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-html"}},"<link rel=\"preload\" href=\"font-lato/lato-regular-webfont.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n<style>\n  @font-face {\n    font-family: Lato;\n    src: url('font-lato/lato-regular-webfont.woff2') format('woff2'), url('font-lato/lato-regular-webfont.woff') format('woff');\n    font-display: swap; /* optional */\n  }\n</style>\n")),o.a.createElement(s.MDXTag,{name:"ol",components:a,props:{start:2}},o.a.createElement(s.MDXTag,{name:"li",components:a,parentName:"ol"},"Update the font stack in your theme:")),o.a.createElement(s.MDXTag,{name:"pre",components:a},o.a.createElement(s.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-js"}},"export const fontStack = {\n  regular: '\"Lato\", sans-serif';\n};\n")),o.a.createElement(s.MDXTag,{name:"p",components:a},"At SumUp, we like to use ",o.a.createElement(s.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://www.zachleat.com/web/comprehensive-webfonts/#foft"}},"FOFT, or FOUT with Two Stage Render")," paired with ",o.a.createElement(s.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-preload"}},"Critical FOFT with preload"),". When you opt for this approach, you will have to add some custom global styles. Here's how you can do this with Circuit UI:"),o.a.createElement(s.MDXTag,{name:"p",components:a},"When you call ",o.a.createElement(s.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"globalStyles()")," to inject the global styles, you can pass it your custom styles:"),o.a.createElement(s.MDXTag,{name:"pre",components:a},o.a.createElement(s.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-js"}},"import { yourTheme } from './styles/themes';\nimport { globalStyles } from '@sumup/circuit-ui';\n\nconst customStyles = `\n  body {\n    font-family: sans-serif;\n  }\n  body.fonts-loaded-initial {\n    font-family: 'LatoInitial', sans-serif;\n  }\n  body.fonts-loaded-full {\n    font-family: 'Lato', sans-serif;\n  }\n`;\n\nglobalStyles({ theme: yourTheme, custom });\n")))}}}]);