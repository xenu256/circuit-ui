(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{"./docs/content/styles/media-queries.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),o=a.n(t),r=a("./node_modules/@mdx-js/tag/dist/index.js"),s=a("./node_modules/emotion-theming/dist/index.esm.js"),m=a("./src/index.js"),p=a("./src/components/Table/index.js"),i=["Breakpoint name","Query"],c=Object(s.b)(function(e){var n=e.theme;return o.a.createElement(p.a,{headers:i,rows:Object.keys(n.breakpoints).map(function(e){return[e,function(e){return"number"===typeof e?"(min-width: "+e.toString()+"px)":e}(n.breakpoints[e])]})})}),l=function(){return o.a.createElement(s.a,{theme:m.a.circuit},o.a.createElement(c,null))};n.default=function(e){var n=e.components;!function(e,n){var a={};for(var t in e)n.indexOf(t)>=0||Object.prototype.hasOwnProperty.call(e,t)&&(a[t]=e[t])}(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"media-queries"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h1",props:{"aria-hidden":!0,href:"#media-queries"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Media queries"),o.a.createElement(r.MDXTag,{name:"p",components:n},"To use the media query utilities provided by Circuit themes, you'll use a\nfunction provided by the theme called ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"theme.mq"),"."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"usage-in-code"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#usage-in-code"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Usage in code"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"import styled, { css } from 'react-emotion';\n\nconst ResponsiveDiv = styled('div')`\n  ${({ theme }) => css`\n    ${theme.mq.mega`\n      padding-top: ${theme.spacings.peta};\n    `};    \n  `};\n`;\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"breakpoints"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#breakpoints"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Breakpoints"),o.a.createElement(r.MDXTag,{name:"p",components:n},"You can use the following breakpoints when implementing either components\ninside Circuit UI or writing code that should be theme-compliant in your app."),o.a.createElement(l,null),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"responsive-best-practices"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#responsive-best-practices"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Responsive best practices"),o.a.createElement(r.MDXTag,{name:"ul",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Do not refer directly to ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"theme.breakpoints"),", but instead use the named\nmedia query helpers.")))}}}]);